# Dataset Link : https://github.com/KDDI-AI-Center/LFW-emotion-dataset
# Open CV's Trained Face recognition Model : https://github.com/opencv/opencv/tree/master/data/haarcascades
# 얼굴인식 알고리즘을 이용하여 9330장의 인물 사진으로 얼굴 인식해 보기

import cv2
import numpy as np
imort os

path_dir = "faces"
file_list = os.listdir(path_dir)

file_list[0]
# 'Aaron_Eckhart_0001.jpg'

len(file_list)
# 9330

file_name_list = []

for i in range(len(file_list)):
    file_name_list.append(file_list[i].replace(".jpg", ""))
    
file_name_list[0]
# 'Aaron_Eckhart_0001' / 확장자명이 없는 파일명 새로 만들기(.jpg 생략)

image = cv2.imread('faces/Aaron_Eckhart_0001.jpg')
face_cascade = cv2.CascadeClassifier('haarcascade_frontalface_default.xml')
gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
faces = face_cascade.detectMultiScale(gray, 1.3, 5)
for (x, y, w, h) in faces:
    cv2.rectangle(image, (x, y), (x + w, y + h), (255, 0, 0), 2)
    cv2.imshow("face_recognition", image)
    cv2.waitKey(0)
    cv2.destroyAllWindows()
    
# 0을 입력하면 종료
# Aaron_Eckhart_0001 사진에서 얼굴을 인식하여 영역 검출



image = cv2.imread('faces/Aaron_Eckhart_0001.jpg')
face_cascade = cv2.CascadeClassifier('haarcascade_frontalface_default.xml')
gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
faces = face_cascade.detectMultiScale(gray, 1.3, 5)

for (x, y, w, h) in faces:
    cv2.rectangle(image, (x, y), (x + w, y + h), (255, 0, 0), 2)
    cropped = image[y: y + h, x: x + w]
    resize = cv2.resize(cropped, (180, 180))
    cv2.imshow("crop & resize", resize)
    cv2.waitKey(0)
    cv2.destroyAllWindows()
    
# 얼굴을 잘라 사이즈를 조정해 출력해주는 코드
# 검출한 얼굴 영역을 cropped 변수에 지정하고 해당 부분을 180*180의 크기로 재조정
# 원래 사진 크기는 250*250, 재조정하려면 cv2.resize() 함수 이용



import numpy as np
import os
import cv2

path_dir = "faces"
file_list = os.listdir(path_dir)

file_name_list = []

for i in range(len(file_list)):
    file_name_list.append(file_list[i].replace(".jpg", ""))
    
def Cutting_face_save(image, name):
    face_cascade = cv2.CascadeClassifier('haarcascade_frontalface_default.xml')
    gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
    faces = face_cascade.detectMultiScale(gray, 1.3, 5)
    for (x, y, w, h) in faces:
        cropped = image[y: y + h, x: x + w]
        resize = cv2.resize(cropped, (180, 180))
        cv2.imwrite(f"cutting_faces/{name}.jpg", resize)
        
for name in file_name_list:
    img = cv2.imread("faces/"+name+".jpg")
    Cutting_face_save(img, name)
    
    
# 9330장의 인물 사진 전체의 얼굴만 따오는 알고리즘
# 9330 중 8952개만 얼굴 검출 완료. 95.9% 성공
